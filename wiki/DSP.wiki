#summary This page contains all information regarding Omap3530 DSP stack integration in Android
<wiki:toc max_depth="4" />
= Introduction =

The OMAP3530 (as well the !DaVinci (DM) family of processors) has a C46x+ DSP core embedded in the SoC. This DSP core can be used for various purposes, including multimedia decoding/encoding.

[http://code.google.com/p/rowboat/ Rowboat] DSP support is based on the TI Linux Digital Video Software Development Kit ([http://software-dl.ti.com/dsps/dsps_public_sw/sdo_sb/targetcontent/dvsdk/ DVSDK]) for the OMAP3530

= Software Stack Components =

The following components form a complete software stack needed to work efficiently with DSP. They are provided in TI DVSDK or individual packages.

TBD: _Briefly describe what each component does and provide reference to all useful information_ 

 # *bios* (and tools)
 # *codec engine* (and tools)
 # *dsplink*
 # *dmai*
 # *opencore dmai codecs*
 # *additional DSP codecs* (optional), for example, mp3 DSP codec

= List of modifications made on top of DSP stack =
 # Added SYS V IPC into bionic
 # Some 'libpthread' calls are not yet implemented in android (this moment they are commented out):
   * pthread_sigmask
   * pthread_mutexattr_settype
   * pthread_setcanceltype
   * pthread_attr_setinheritsched
 # Modified build files (Makefiles and config.bld) to adapt for Android toolchains
 # Memory holes kernel patches (TBD)

= Building and Testing DSP stack =

== Preparation ==

 # Check if you have expect installed on your build host (TBD explain why it is needed)
 # Download rowboat Android (Eclair version) with integrated TI DSP stack from gitorious.org/rowboat:
    {{{ 
# repo init -u git://gitorious.org/rowboat/manifest.git -m rowboat-eclair-dsp.xml
# repo sync
    }}}
 # Download and place codec_engine_2_24_01.tar.gz under the _external/ti-dsp_ folder. Codec Engine is available [http://software-dl.ti.com/dsps/dsps_registered_sw/sdo_sb/targetcontent/CE/ce_2_24/index.html here.] <br/> *Note:* You may need to have an account on software-dl.ti.com
 # (Optional) Download and place mp3 DSP codec [http://software-dl-1.ti.com/dsps/forms/self_cert_export.html?prod_no=c64xplus_mp3dec_1_31_001_production.bin&ref_url=http://software-dl.ti.com/dsps/dsps_public_sw/sdo_sb/targetcontent/dvsdk/DVSDK_3_00/latest/ c64xplus_mp3dec_1_31_001_production.bin] under the _external/ti-dsp_ folder. <br/> *Note:* It requires registration.
 # (Optional) DVSDK package will be downloaded automatically during the build process, unless you want to use local files (previously downloaded instead in order to save time on downloads.
   * You can put pre-downloaded [http://software-dl.ti.com/dsps/dsps_public_sw/sdo_sb/targetcontent/dvsdk/DVSDK_3_00/latest/ DVSDK] under the _external/ti-dsp_ folder. Full list of necessary files looks as follows:
      * dvsdk_setuplinux_3_00_02_44.bin
      * cs1omap3530_setuplinux_1_00_01-44.bin
      * xdctools_setuplinux_3_15_01_59.bin
      * bios_setuplinux_5_33_06.bin
      * TI-C6x-CGT-v6.0.16.1.bin

== MP3 DSP codec ==

By default codec server doesn't support MP3 decoding, you need to install additional codec. All the instructions are available on the [http://processors.wiki.ti.com/index.php/How_do_I_Integrate_new_codecs_into_DVSDK TI wiki page].

== Build ==

To build Android with TI DSP stack use following command:
   {{{
# make TARGET_PRODUCT=[omap3evm | beagleboard | igepv2] dvsdk
   }}}

It builds Android and Linux kernel for the selected platform, TI kernel modules for DSP communication and codec server. 

After build is finished successfully TI DSP specific kernel modules and codec server are located under the _/system/ti-dsp_ folder in the rootfs.

== Boot ==

DVSDK DSP stack by default uses physical memory window within 89-128MB. In order not to change DSP stack mappings we recommend to use following memory settings:
  * Boards with > 128MB of memory (say Beagle C3, or OMAP3EVM Gen. II). Use "memory hole" parameters, for example adding: {{{ mem=88M@0x80000000 mem=128M@0x88000000 }}} to the bootargs tells kernel to take first 88M of phys memory and 128M with 128M offset, so the DSP memory window will not be managed by the kernel.
(Don't forget to adjust these parameters for your board)

  * Boards with 128MB of memory.Add {{{ mem=88M }}} to your bootargs (rest will be used for DSP). With 128MB board you'll probably have buffer allocating problem with the omap_vout driver. To avoid this, try following bootargs additions for the display driver:
{{{ omap_vout.vid1_static_vrfb_alloc=y omap_vout.video1_numbuffers=3 omap_vout.video1_bufsize=829440 omap_vout.video2_numbuffers=0 }}}. Anyway we recommend to use new 256M boards.


== Test ==

To test media playback use 'Music player' or 'Gallery' UI applications in rowboat. Supported formats are available on 'OMX DSP-accelerated audio/video codecs' wiki page.
Check for 'omx-dsp' tag in logcat to see that accelerated codecs are enabled.

= misc notes (draft) =

One more update:

During downloading DVSDK svn may ask you something like "do you want to save this settings"(it happens after kernel build).
You should confirm it (save permanently) so it will work quietly later.

_Some updates:_
 * Now kernel will be reconfigured with the default config only if there is no kernel/.config file so: 
  # If you didn't build kernel before it will be configured with the default config and built.
  # It will rebuild kernel using your config if .config is in place (will take a few seconds if you didn't changed it).
 * DVSDK cleaning is now calling only after downloading/installing it to clean up prebuilt stuff.